<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhangYutong</title>
  
  <subtitle>君子性非异也, 善假于物也</subtitle>
  <link href="https://interestingblog.top/atom.xml" rel="self"/>
  
  <link href="https://interestingblog.top/"/>
  <updated>2022-02-15T13:00:52.036Z</updated>
  <id>https://interestingblog.top/</id>
  
  <author>
    <name>ZhangYutong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode每日一题1380. 矩阵中的幸运数</title>
    <link href="https://interestingblog.top/2022/02/15/leetcode1380/"/>
    <id>https://interestingblog.top/2022/02/15/leetcode1380/</id>
    <published>2022-02-15T13:00:12.000Z</published>
    <updated>2022-02-15T13:00:52.036Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e710d9062ca14968bf14c9266ae02756~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><strong>思路: 同行最小且同列最大的数只有一个, 找到每行最小的数, 每列最大的数, 然后遍历找相同的数即可</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">luckyNumbers</span> <span class="params">(<span class="type">int</span>[][] matrix)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> matrix.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> matrix[<span class="number">0</span>].length;</span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span>[] row = <span class="keyword">new</span> <span class="title class_">int</span>[m];</span><br><span class="line">        <span class="type">int</span>[] col = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="comment">// 给行最小值数组填充值</span></span><br><span class="line">        Arrays.fill(row,Integer.MAX_VALUE);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                row[i] = Math.min(matrix[i][j], row[i]);</span><br><span class="line">                col[j] = Math.max(matrix[i][j], col[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; row.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; col.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (row[i] == col[j]) res.add(row[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e710d9062ca14968bf14c9266ae02756~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题540. 有序数组中的单一元素</title>
    <link href="https://interestingblog.top/2022/02/14/leetcode540/"/>
    <id>https://interestingblog.top/2022/02/14/leetcode540/</id>
    <published>2022-02-14T12:19:38.000Z</published>
    <updated>2022-02-14T13:01:07.055Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dedec8230174dc18c2f5d0ed50af142~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">singleNonDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            result ^= nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>思路 1: 按位异或, 因为处了目标之外其他元素都出现了两次, 所以可以通过异或来拿到最终的值;<br/><br>时间复杂度 O(n) 空间复杂度 O(1)<br/><br>tips:0 ^ 0 &#x3D; 0; 1 ^ 1 &#x3D; 0; 0 ^ 1 &#x3D; 1;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">singleNonDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> i + ((j - i) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (mid % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 偶数</span></span><br><span class="line">                <span class="keyword">if</span> (nums[mid] == nums[mid + <span class="number">1</span>]) i = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="type">else</span> <span class="variable">j</span> <span class="operator">=</span> mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 奇数</span></span><br><span class="line">                <span class="keyword">if</span> (nums[mid] == nums[mid - <span class="number">1</span>]) i = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="type">else</span> <span class="variable">j</span> <span class="operator">=</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>思路 2: 二分法, 根据 mid 奇偶数判断相应情况 时间复杂度 O(logn) 空间复杂度 O(1)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dedec8230174dc18c2f5d0ed50af142~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
    <category term="位运算" scheme="https://interestingblog.top/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    <category term="二分" scheme="https://interestingblog.top/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode57.和为s的两个数字</title>
    <link href="https://interestingblog.top/2022/02/13/leetcode57/"/>
    <id>https://interestingblog.top/2022/02/13/leetcode57/</id>
    <published>2022-02-13T13:32:34.000Z</published>
    <updated>2022-02-13T13:37:29.067Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/492c34c99632474d910ccb7dc920773a~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><strong>思路 1: hash</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.get(target - num) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;num, target - num&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(num, num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用 hash 存储, 跟两数之和一个解法.</p></blockquote><p><strong>思路 2: 双指针</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] + nums[j] &gt; target) j--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[i] + nums[j] &lt; target) i ++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;nums[i], nums[j]&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>双指针对撞, 大于左移右指针, 小于右移左指针, 等于则返回.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/492c34c99632474d910ccb7dc920773a~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
    <category term="双指针" scheme="https://interestingblog.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题1189. &quot;气球&quot;的最大数量</title>
    <link href="https://interestingblog.top/2022/02/13/leetcode1189/"/>
    <id>https://interestingblog.top/2022/02/13/leetcode1189/</id>
    <published>2022-02-13T08:06:14.000Z</published>
    <updated>2022-02-14T12:21:14.708Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/993a2f62697a44da9855ca2ac04b6e82~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><strong>思路: hash, 将每个字符存在 hash, 最后取出最小值即可;</strong><br><strong>注意: l&#x2F;o 值需要除以二, 因为需求是两个 l&#x2F;o</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxNumberOfBalloons</span><span class="params">(String text)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] dict = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; text.length() ; i ++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> text.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;b&#x27;</span>) &#123;</span><br><span class="line">                dict[<span class="number">0</span>] ++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line">                dict[<span class="number">1</span>] ++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;l&#x27;</span>) &#123;</span><br><span class="line">                dict[<span class="number">2</span>] ++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;o&#x27;</span>) &#123;</span><br><span class="line">                dict[<span class="number">3</span>] ++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;n&#x27;</span>) &#123;</span><br><span class="line">                dict[<span class="number">4</span>] ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dict[<span class="number">2</span>] /= <span class="number">2</span>;</span><br><span class="line">        dict[<span class="number">3</span>] /= <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; dict.length ; i ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dict[i] &lt; dict[minIndex]) &#123;</span><br><span class="line">                minIndex = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict[minIndex];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/993a2f62697a44da9855ca2ac04b6e82~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="hash" scheme="https://interestingblog.top/tags/hash/"/>
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题1748. 唯一元素的和</title>
    <link href="https://interestingblog.top/2022/02/06/leetcode1748/"/>
    <id>https://interestingblog.top/2022/02/06/leetcode1748/</id>
    <published>2022-02-06T11:22:01.000Z</published>
    <updated>2022-02-13T08:07:48.215Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/25368dcd8a984141aedbbda3e0a94daf~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sumOfUnique</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; nums.length ; i ++) &#123;</span><br><span class="line">            map.put(nums[i], map.getOrDefault(nums[i], <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getValue() == <span class="number">1</span>) &#123;</span><br><span class="line">                sum += entry.getKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>思路: 先将数存到 hash 里, 然后遍历值为 1 的 key 相加返回即可</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/25368dcd8a984141aedbbda3e0a94daf~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题1725. 可以形成最大正方形的矩形数目, 遍历</title>
    <link href="https://interestingblog.top/2022/02/04/leetcode1725/"/>
    <id>https://interestingblog.top/2022/02/04/leetcode1725/</id>
    <published>2022-02-04T06:19:05.000Z</published>
    <updated>2022-02-13T04:29:38.366Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ed24e19204841f59ea20b6ae5e0344e~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">countGoodRectangles</span><span class="params">(<span class="type">int</span>[][] rectangles)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> Math.min(rectangles[<span class="number">0</span>][<span class="number">0</span>], rectangles[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rectangle : rectangles) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Math.min(rectangle[<span class="number">0</span>], rectangle[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span> (max &lt; min) &#123;</span><br><span class="line">                max = min;</span><br><span class="line">                total = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max == min)&#123;</span><br><span class="line">                total ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>思路: 查询每个数组里最小的数值, 因为矩形切割为正方形肯定是以最小的边为边. 遍历时记录目前的最大值 max 并记录出现次数 total, 如果发现又出现更大的边, 则清空次数 total, 最后返回最大边出现次数 total</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ed24e19204841f59ea20b6ae5e0344e~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题1414. 和为 K 的最少斐波那契数字数目</title>
    <link href="https://interestingblog.top/2022/02/03/leetcode1414/"/>
    <id>https://interestingblog.top/2022/02/03/leetcode1414/</id>
    <published>2022-02-03T08:58:45.000Z</published>
    <updated>2022-02-13T04:29:35.931Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bb6f562701e42d28eb4394a0e48735d~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMinFibonacciNumbers</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; fibList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        fibList.add(<span class="number">1</span>);</span><br><span class="line">        fibList.add(<span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b &lt;= k) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b;</span><br><span class="line">            a = b;</span><br><span class="line">            b = c;</span><br><span class="line">            fibList.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 查找几个数组成k</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> fibList.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fibList.get(i) &lt;= k) &#123;</span><br><span class="line">                k -= fibList.get(i);</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="思路-贪心算法"><a href="#思路-贪心算法" class="headerlink" title="思路: 贪心算法"></a>思路: 贪心算法</h1><p>先将数列创建出来, 然后假定有最优解, 从后向前遍历, 如果 <strong>数列的值 &lt;&#x3D; k, k &#x3D; k - 数列的值</strong><br>然后 ans 加一, 最后得出解为 ans.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bb6f562701e42d28eb4394a0e48735d~tplv-k3u1fbpfcp-watermark.image&quot; alt=&quot;image.</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://interestingblog.top/categories/LeetCode/"/>
    
    
    <category term="leetcode" scheme="https://interestingblog.top/tags/leetcode/"/>
    
  </entry>
  
</feed>
