{"meta":{"title":"ZhangYutong","subtitle":"君子性非异也, 善假于物也","description":"有趣的博客","author":"ZhangYutong","url":"https://interestingblog.top","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-02-13T02:56:34.491Z","updated":"2022-02-13T02:56:34.491Z","comments":false,"path":"/404.html","permalink":"https://interestingblog.top/404.html","excerpt":"","text":""},{"title":"关于","date":"2022-02-13T02:56:34.494Z","updated":"2022-02-13T02:56:34.494Z","comments":false,"path":"about/index.html","permalink":"https://interestingblog.top/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2022-02-13T02:56:34.494Z","updated":"2022-02-13T02:56:34.494Z","comments":false,"path":"books/index.html","permalink":"https://interestingblog.top/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-02-13T02:56:34.496Z","updated":"2022-02-13T02:56:34.496Z","comments":true,"path":"links/index.html","permalink":"https://interestingblog.top/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-02-13T02:56:34.495Z","updated":"2022-02-13T02:56:34.495Z","comments":false,"path":"categories/index.html","permalink":"https://interestingblog.top/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-02-13T02:56:34.497Z","updated":"2022-02-13T02:56:34.497Z","comments":false,"path":"repository/index.html","permalink":"https://interestingblog.top/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-02-13T02:56:34.498Z","updated":"2022-02-13T02:56:34.498Z","comments":false,"path":"tags/index.html","permalink":"https://interestingblog.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"LeetCode每日一题540. 有序数组中的单一元素","slug":"leetcode540","date":"2022-02-14T12:19:38.000Z","updated":"2022-02-14T12:20:31.725Z","comments":true,"path":"2022/02/14/leetcode540/","link":"","permalink":"https://interestingblog.top/2022/02/14/leetcode540/","excerpt":"","text":"123456789class Solution &#123; public int singleNonDuplicate(int[] nums) &#123; int result = 0; for (int i = 0; i &lt; nums.length; i++) &#123; result ^= nums[i]; &#125; return result; &#125;&#125; 思路: 按位异或, 因为处了目标之外其他元素都出现了两次, 所以可以通过异或来拿到最终的值;tips:0 ^ 0 &#x3D; 0; 1 ^ 1 &#x3D; 0; 0 ^ 1 &#x3D; 1;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"},{"name":"位运算","slug":"位运算","permalink":"https://interestingblog.top/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"}]},{"title":"LeetCode57.和为s的两个数字","slug":"leetcode57","date":"2022-02-13T13:32:34.000Z","updated":"2022-02-13T13:37:29.067Z","comments":true,"path":"2022/02/13/leetcode57/","link":"","permalink":"https://interestingblog.top/2022/02/13/leetcode57/","excerpt":"","text":"思路 1: hash 123456789101112class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); for (int num : nums) &#123; if (map.get(target - num) != null) &#123; return new int[]&#123;num, target - num&#125;; &#125; map.put(num, num); &#125; return null; &#125;&#125; 使用 hash 存储, 跟两数之和一个解法. 思路 2: 双指针 12345678910class Solution &#123; public int[] twoSum(int[] nums, int target) &#123; int i = 0, j = nums.length - 1; while (true) &#123; if (nums[i] + nums[j] &gt; target) j--; else if (nums[i] + nums[j] &lt; target) i ++; else return new int[] &#123;nums[i], nums[j]&#125;; &#125; &#125;&#125; 双指针对撞, 大于左移右指针, 小于右移左指针, 等于则返回.","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"},{"name":"双指针","slug":"双指针","permalink":"https://interestingblog.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"}]},{"title":"LeetCode每日一题1189. \"气球\"的最大数量","slug":"leetcode1189","date":"2022-02-13T08:06:14.000Z","updated":"2022-02-14T12:21:14.708Z","comments":true,"path":"2022/02/13/leetcode1189/","link":"","permalink":"https://interestingblog.top/2022/02/13/leetcode1189/","excerpt":"","text":"思路: hash, 将每个字符存在 hash, 最后取出最小值即可;注意: l&#x2F;o 值需要除以二, 因为需求是两个 l&#x2F;o 12345678910111213141516171819202122232425262728class Solution &#123; public int maxNumberOfBalloons(String text) &#123; int[] dict = new int[5]; for (int i = 0 ; i &lt; text.length() ; i ++) &#123; char ch = text.charAt(i); if (ch == &#x27;b&#x27;) &#123; dict[0] ++; &#125; else if (ch == &#x27;a&#x27;) &#123; dict[1] ++; &#125; else if (ch == &#x27;l&#x27;) &#123; dict[2] ++; &#125; else if (ch == &#x27;o&#x27;) &#123; dict[3] ++; &#125; else if (ch == &#x27;n&#x27;) &#123; dict[4] ++; &#125; &#125; dict[2] /= 2; dict[3] /= 2; int minIndex = 0; for (int i = 0 ; i &lt; dict.length ; i ++) &#123; if (dict[i] &lt; dict[minIndex]) &#123; minIndex = i; &#125; &#125; return dict[minIndex]; &#125;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"hash","slug":"hash","permalink":"https://interestingblog.top/tags/hash/"},{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"}]},{"title":"LeetCode每日一题1748. 唯一元素的和","slug":"leetcode1748","date":"2022-02-06T11:22:01.000Z","updated":"2022-02-13T08:07:48.215Z","comments":true,"path":"2022/02/06/leetcode1748/","link":"","permalink":"https://interestingblog.top/2022/02/06/leetcode1748/","excerpt":"","text":"123456789101112131415class Solution &#123; public int sumOfUnique(int[] nums) &#123; Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); for (int i = 0 ; i &lt; nums.length ; i ++) &#123; map.put(nums[i], map.getOrDefault(nums[i], 0) + 1); &#125; int sum = 0; for (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) &#123; if (entry.getValue() == 1) &#123; sum += entry.getKey(); &#125; &#125; return sum; &#125;&#125; 思路: 先将数存到 hash 里, 然后遍历值为 1 的 key 相加返回即可","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"}]},{"title":"LeetCode每日一题1725. 可以形成最大正方形的矩形数目, 遍历","slug":"leetcode1725","date":"2022-02-04T06:19:05.000Z","updated":"2022-02-13T04:29:38.366Z","comments":true,"path":"2022/02/04/leetcode1725/","link":"","permalink":"https://interestingblog.top/2022/02/04/leetcode1725/","excerpt":"","text":"1234567891011121314151617class Solution &#123; public int countGoodRectangles(int[][] rectangles) &#123; int max = Math.min(rectangles[0][0], rectangles[0][1]); int total = 0; for (int[] rectangle : rectangles) &#123; int min = Math.min(rectangle[0], rectangle[1]); if (max &lt; min) &#123; max = min; total = 0; &#125; if (max == min)&#123; total ++; &#125; &#125; return total; &#125;&#125; 思路: 查询每个数组里最小的数值, 因为矩形切割为正方形肯定是以最小的边为边. 遍历时记录目前的最大值 max 并记录出现次数 total, 如果发现又出现更大的边, 则清空次数 total, 最后返回最大边出现次数 total","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"}]},{"title":"LeetCode每日一题1414. 和为 K 的最少斐波那契数字数目","slug":"leetcode1414","date":"2022-02-03T08:58:45.000Z","updated":"2022-02-13T04:29:35.931Z","comments":true,"path":"2022/02/03/leetcode1414/","link":"","permalink":"https://interestingblog.top/2022/02/03/leetcode1414/","excerpt":"","text":"1234567891011121314151617181920212223class Solution &#123; public int findMinFibonacciNumbers(int k) &#123; List&lt;Integer&gt; fibList = new ArrayList&lt;&gt;(); fibList.add(1); fibList.add(1); int a = 1, b = 1; while (b &lt;= k) &#123; int c = a + b; a = b; b = c; fibList.add(c); &#125; int ans = 0; // 查找几个数组成k for (int i = fibList.size() - 1; i &gt;= 0; i--) &#123; if (fibList.get(i) &lt;= k) &#123; k -= fibList.get(i); ans++; &#125; &#125; return ans; &#125;&#125; 思路: 贪心算法先将数列创建出来, 然后假定有最优解, 从后向前遍历, 如果 数列的值 &lt;&#x3D; k, k &#x3D; k - 数列的值然后 ans 加一, 最后得出解为 ans.","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"}]}],"categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://interestingblog.top/categories/LeetCode/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"https://interestingblog.top/tags/leetcode/"},{"name":"位运算","slug":"位运算","permalink":"https://interestingblog.top/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"},{"name":"双指针","slug":"双指针","permalink":"https://interestingblog.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"},{"name":"hash","slug":"hash","permalink":"https://interestingblog.top/tags/hash/"}]}